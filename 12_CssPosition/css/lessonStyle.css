/* Применяется ко всем элементам страницы */
* {
	padding: 0;
	margin: 0;
	border: 0;
}

/* Меняется подсчет ширины блока в браузерах для удобства верстки */
*,
*:before,
*:after {
	-moz-box-sizing: border-box;
	-webkit-box-sizing: border-box;
	box-sizing: border-box;
}

/* Убираем линии обводки элементов при фокусе у браузеров */
:focus,
:active {
	outline: none;
}
a:focus,
a:active {
	outline: none;
}

/* Делаем теги HTML5 блочными */
nav,
footer,
header,
aside {
	display: block;
}

/* Запрет на непроизвольное изменение шрифта в браузерах */
html,
body {
	height: 100%;
	width: 100%;
	font-size: 100%;
	line-height: 1;
	font-size: 14px;
	-ms-text-size-adjust: 100%;
	-moz-text-size-adjust: 100%;
	-webkit-text-size-adjust: 100%;
}

/* Включаем у элементов форм наследование шрифта, по умолчанию не наследуют его */
input,
button,
textarea {
	font-family: inherit;
}

/* Убираем стили ссылок, списков, кнопок и т.д. */
input::-ms-clear {
	display: none;
}
button {
	cursor: pointer;
}
button::-moz-focus-inner {
	padding: 0;
	border: 0;
}
a,
a:visited {
	text-decoration: none;
}
a:hover {
	text-decoration: none;
}
ul li {
	list-style: none;
}
img {
	vertical-align: top;
}

/* Обнуляем стили заголовков h1-h6 */
h1,
h2,
h3,
h4,
h5,
h6 {
	font-size: inherit;
	font-weight: 400;
}

/* -------------------------------------- */

body {
	padding: 30px;
	font-family: Arial, "Helvetica Neue", Helvetica, sans-serif;
}

.block {
	border: 5px solid red;
	/* При ограничении максимальной ширины блочного элемента */
	max-width: 800px;
	/* Его можно выровнять по центру экрана с помощью auto margin */
	margin: 0 auto;
	height: 1500px;
	/*
		Чтобы позиционировать элементы относительно их родительских элементов,
		нам необходимо родителю установить Относительное позиционирование!!!		
	*/
	position: relative;
}

/* Общие параметры выносим в отдельный класс для всех блоков div внутри класса block */
.block div {
	line-height: 50px;
	font-size: 18px;
	font-weight: 700;
	text-align: center;
}

.block__1 {
	background-color: #87ba8d;
	color: #fff;
	width: 50%;
	left: 0;
	top: 0;
	position: absolute;
}

.block__2 {
	background-color: #fabce4;
	width: 50%;
	right: 0;
	top: 0;
	position: absolute;
	/*
		Позиционирование по умолчанию:
		отображает блок как есть, параметры позиционирования не действуют
	
		position: static;
	*/

	/* 
		Относительное позиционирование:
		сдвигаем элемент относительно его стартовой позиции в коде
		при этом на месте элемента будет отображаться пустое место размером с элемент
	
		position: relative;
		left: 50px;
		top: 60px;
	*/

	/*
		left: 0;
		top: 0;
		right: 0;
		bottom: 0;
	*/

	/* 
		z-index работает со свойством position,
		управляет положением элеменртов по оси Z, 
		т.е. наложением элементов, по умолчанию индекс: 0
		
		z-index: 0;
		*/

	/*
		Абсолютное позиционирование: элемент смещается, пустого места не остается,
		блоки схлопываются
	*/
	/*
		position: absolute;
		top: 50px;
		left: 150px;
	*/
	/*
	Фиксированная позиция позволяет позиционировать элемент относительно окна браузера,
	вне зависимости от того, имеет ли родитель элемента относительное позиционирование
	*/
	/* position: fixed; */
	/* Прикрепляется к своему положению и не меняется прит прокрутке, цепляется в границу экрана */
	/* position: sticky;
	top: 0; */
}

/* Данный блок мы не увидим в структуре из абсолютно спозиционированных блоков, т.к. нарушается структура документа */
.block__3 {
	background-color: #9292fa;
	position: relative;
}
/*
	Минусы абсолютного позиционирование:
	1) Абсолютные элементы вырываются из структуры документа, не влияют на другие блоки, легко нарушается структура документа при изменении данных в блоках.
	

 */

.list {
	font-size: 18px;
}

.list li {
	margin: 0px 0px 10px 0px;
	position: relative;
	padding: 0px 0px 0px 30px;
}

.list li:before {
	content: "";
	background: url("../img/icons/li.svg") 0 0 no-repeat;
	width: 20px;
	height: 20px;
	position: absolute;
	top: 3px;
	left: 0;
}
